require(stats); require(graphics)
ns(women$height, df = 5)
require(stats); require(graphics)
ns(women$height, df = 5)
library("splines", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ns(women$height, df = 5)
women$height
women$height  %>% length
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
women$height  %>% length
plot(women, xlab = "Height (in)", ylab = "Weight (lb)")
ht <- seq(57, 73, length.out = 200)
lines(ht, predict(fm1, data.frame(height = ht)))
summary(fm1 <- lm(weight ~ ns(height, df = 5), data = women))
lines(ht, predict(fm1, data.frame(height = ht)))
m=3:4
1-2^(-2)
1-2^(-m)
1+2^(1-m)
b^(-m)
2^(-m)
b^(1-m)
2^(1-m)
1+2^(m)
1+2^(-m)
2^(m+1)
x=356:360
4S1_1 = sum(x-mean(x))
S_1 = sum(x-mean(x))
(S_1 = sum(x-mean(x)))
S_1 = (x-mean(x))^2 %>% sum
S_1
S_2 = sum(x^2) - 5 * mean(x)^2
S_2 = sum(x^2) - 5 * mean(x)^2 %>% print
S_2
sum(x^2) - 5 * mean(x)^2 %>% print
sum(x^2) - 5 * mean(x)^2
Ft = 1 / (1+exp(-t))
t=-100:100
Ft = 1 / (1+exp(-t))
plot(t, Ft)
t=seq(-1,1,100)
Ft = 1 / (1+exp(-t))
plot(t, Ft)
t=seq(-1,1,length=100)
Ft = 1 / (1+exp(-t))
plot(t, Ft)
t=seq(-3,13,length=100)
Ft = 1 / (1+exp(-t))
plot(t, Ft)
t=seq(-6,6,length=200)
Ft = 1 / (1+exp(-t))
plot(t, Ft)
plot(t, Ft, type = "l")
gt = 1 - Ft
plot(t, gt)
plot(t, gt, type = "l")
gt_1 = 1 - (1 + exp( + e^(-t))^(-1))
gt_1 = 1 - (1 + exp(-t))^(-1)
gt_2 = exp(-t) * (1 + exp(-t))^(-1)
gt_1 = 1 - (1 + exp(-t))^(-1); plot(t, gt_1)
gt_2 = exp(-t) * (1 + exp(-t))^(-1); plot(t, gt_2, type = "l")
gt_1 = 1 - (1 + exp(-t))^(-1); plot(t, gt_1, type = "l")
gt_2 = exp(-t) * (1 + exp(-t))^(-1); plot(t, gt_2, type = "l")
x = "00000000000000000000000000001011"
(x <- as.numeric(strsplit(as.character(x), "")[[1]]))
(n = length(x))
x = rev(x)
temp = 0
for (i in 1:(n-1)) {
temp = temp + x[i] * 2^(i-1)
}
(result = temp - x[32] * 2^(n-1))
#######
df = data.frame(
x=x,
i=0:31
)
head(df)
sum(df$x[-length(n)] * 2^(df$i[-1])) - df$i[1] * 2^(n-1)
# cim_vl3
riemann = function(f, a, b, n = 20) {
h = (b-a)/n
x = a + =:(n-1) * h
R1 = sum(h * f(x))
R2 = sum(h * f(x+h))
c(R1, R2)
}
riemann = function(f, a, b, n = 20) {
h = (b-a)/n
x = a + =:(n-1) * h
riemann = function(f, a, b, n = 20) {
h = (b-a)/n
x = a + 0:(n-1) * h
R1 = sum(h * f(x))
R2 = sum(h * f(x+h))
c(R1, R2)
}
fun = function(x) 2 + x^2
riemann(f=fun, 1, 5, n= 4)
plot(fun)
riemann(f=fun, 0, 1, n= 4)
integrate(fun, 0, 1)
riemann(f=fun, 0, 1, n= 2)
nbit = c(8,16,32,64)
2^(nbit-1)
2^7
2^3
2^3:6
2^(3:6)
2^(-7)
2^(7)
8+16+32+64
8+16+32+64-128
2^4+2^5
2^5
2^4
1+2+4+16+32
2^c(-2,-3-5)
2^c(-2,-3,-5)
2^c(-2,-3,-5)  %>%  sum
s=2^c(-2,-3,-5)  %>%  sum
s+2^3
s*2^3
(1 + 2^(-2) + 2^(-3) + 2^(-5))
(1 + 2^(-2) + 2^(-3) + 2^(-5)) * 2^3
s
(1 + 2^(-2) + 2^(-3) + 2^(-5))
(1+s)*2^3
2^(c(0,-2,-3,-5,-6))  %>% sum
2^(c(0,-2,-3,-5,-6))  %>% sum  %>% 2^3
2^(c(0,-2,-3,-5,-6))  %>% sum  %>% *2^3
2^(c(0,-2,-3,-5,-6))  %>% sum *^23
2^(c(0,-2,-3,-5,-6))  %>% sum *2^3
# cim_vl4
pzg = function(x, a, m) y = (a * x) %% m
pzg(x, 2, 2)
pzg = function(x, a, m) return(y = (a * x) %% m)
pzg(x, 2, 2)
pzg = function(x, a, m) {
y = (a * x) %% m)
y
}
pzg = function(x, a, m) {
y = (a * x) %% m
y
}
pzg(x, 2, 2)
a=2
m=2
y = (a * x) %% m
y
a * x
x
x = 100434
pzg(x, a=2, m=2)
pzg(x, a=2, m=3)
pzg(x, a=29, m=3)
lewis_goodman_miller = function(x){
pzg(x, a = 7^5, m = 2^31 - 1)
}
lewis_goodman_miller(x)
randu = function(x){
pzg(x, a = 2^16 + 3, m = 2^31)
}
randu(x)
y = rep(NA, n)
lkg = function(x, a, b, m, n = 1) {
y = rep(NA, n)
for (i in 1:n) {
y[i] = (a * x + b) %% m
}
}
lkg(x, 2323232, 43, 42342343, n=1)
lkg = function(x, a, b, m, n = 1) {
y = rep(NA, n)
for (i in 1:n) {
y[i] = (a * x + b) %% m
}
y
}
lkg(x, 2323232, 43, 42342343, n=1)
lkg(x, 2323232, 43, 42342343, n=10)
install.packages("RDieHarder")
install.packages("RDieHarder")
install.packages("RDieHarder")
install.packages('gsl')
library("gsl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("RDieHarder")
detach("package:gsl", unload=TRUE)
library("gsl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("RDieHarder")
lkg(x, 2323232, 43, 42342343, n=10)
lkg = function(x, a, b, m, n = 1) {
y = c(x, rep(NA, n))
for (i in 1:n) {
y[i+1] = (a * y[i] + b) %% m
}
y[-1]
}
lkg(x, 2323232, 43, 42342343, n=1)
lkg(x, 2323232, 43, 42342343, n=10)
ex = lkg(x, 2323232, 43, 42342343, n=10)
plot(ex)
sifgt(15)
shift(15)
x = 1011
x = as.numeric(strsplit(as.character(maschinenzahl), "")[[1]])
x = as.numeric(strsplit(as.character(x), "")[[1]])
x
x[i+1] = x[i-p] %xor% x[i-p+q]
x[i+1] = xor(x[i-p], x[i-p+q])
library("mlr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
